{"version":3,"file":"index.js","sources":["../src/utils.ts","../src/Chart/extendData.ts","../src/Label.tsx","../src/Chart/renderLabels.tsx","../node_modules/svg-partial-circle/index.js","../src/Path.tsx","../src/Chart/renderSegments.tsx","../src/Chart/Chart.tsx"],"sourcesContent":["export function degreesToRadians(degrees: number) {\n  return (degrees * Math.PI) / 180;\n}\n\nexport function valueBetween(value: number, min: number, max: number) {\n  if (value > max) return max;\n  if (value < min) return min;\n  return value;\n}\n\nexport function extractPercentage(value: number, percentage: number) {\n  return (percentage / 100) * value;\n}\n\nexport function bisectorAngle(startAngle: number, lengthAngle: number) {\n  return startAngle + lengthAngle / 2;\n}\n\nexport function shiftVectorAlongAngle(angle: number, distance: number) {\n  const angleRadians = degreesToRadians(angle);\n  return {\n    dx: distance * Math.cos(angleRadians),\n    dy: distance * Math.sin(angleRadians),\n  };\n}\n\nexport function isNumber(value: unknown): value is number {\n  return typeof value === 'number';\n}\n\n/**\n * Conditionally return a prop or a function prop result\n */\nexport function functionProp<ReturnedProp, Payload>(\n  prop: ((args: Payload) => ReturnedProp) | ReturnedProp,\n  payload: Payload\n): ReturnedProp {\n  return typeof prop === 'function'\n    ? // @ts-expect-error: cannot find a way to type 2nd prop arg as anything-but-function\n      prop(payload)\n    : prop;\n}\n","import { extractPercentage, valueBetween } from '../utils';\nimport type { Data, BaseDataEntry, ExtendedData } from '../commonTypes';\nimport type { PropsWithDefaults as ChartProps } from './Chart';\n\nfunction sumValues<DataEntry extends BaseDataEntry>(\n  data: Data<DataEntry>\n): number {\n  let sum = 0;\n  for (let i = 0; i < data.length; i++) {\n    sum += data[i].value;\n  }\n  return sum;\n}\n\n// Append \"percentage\", \"degrees\" and \"startAngle\" to each data entry\nexport default function extendData<DataEntry extends BaseDataEntry>({\n  data,\n  lengthAngle: totalAngle,\n  totalValue,\n  paddingAngle,\n  startAngle: chartStartAngle,\n}: ChartProps<DataEntry>): ExtendedData<DataEntry> {\n  const total = totalValue || sumValues(data);\n  const normalizedTotalAngle = valueBetween(totalAngle, -360, 360);\n  const numberOfPaddings =\n    Math.abs(normalizedTotalAngle) === 360 ? data.length : data.length - 1;\n  const singlePaddingDegrees = Math.abs(paddingAngle) * Math.sign(totalAngle);\n  const degreesTakenByPadding = singlePaddingDegrees * numberOfPaddings;\n  const degreesTakenByPaths = normalizedTotalAngle - degreesTakenByPadding;\n  let lastSegmentEnd = 0;\n  const extendedData: ExtendedData<DataEntry> = [];\n\n  // @NOTE: Shall we evaluate percentage accordingly to dataEntry.value's sign?\n  for (let i = 0; i < data.length; i++) {\n    const dataEntry = data[i];\n    const valueInPercentage = total === 0 ? 0 : (dataEntry.value / total) * 100;\n    const degrees = extractPercentage(degreesTakenByPaths, valueInPercentage);\n    const startAngle = lastSegmentEnd + chartStartAngle;\n    lastSegmentEnd = lastSegmentEnd + degrees + singlePaddingDegrees;\n    extendedData.push(\n      Object.assign(\n        {\n          percentage: valueInPercentage,\n          startAngle,\n          degrees,\n        },\n        dataEntry\n      )\n    );\n  }\n  return extendedData;\n}\n","import React from 'react';\nimport type { CSSProperties, SVGProps } from 'react';\nimport type {\n  ExtendedData,\n  BaseDataEntry,\n  LabelRenderFunction,\n} from './commonTypes';\n\nexport type LabelRenderProps<DataEntry extends BaseDataEntry> = {\n  x: number;\n  y: number;\n  dx: number;\n  dy: number;\n  textAnchor: string;\n  dataEntry: ExtendedData<DataEntry>[number];\n  dataIndex: number;\n  style?: CSSProperties;\n};\n\nexport default function ReactMinimalPieChartLabel<\n  DataEntry extends BaseDataEntry,\n>({\n  renderLabel,\n  labelProps,\n}: {\n  renderLabel: LabelRenderFunction<DataEntry>;\n  labelProps: LabelRenderProps<DataEntry>;\n}) {\n  const label = renderLabel(labelProps);\n\n  // Default label\n  if (typeof label === 'string' || typeof label === 'number') {\n    const { dataEntry, dataIndex, ...props } = labelProps;\n    return (\n      <text dominantBaseline=\"central\" {...props}>\n        {label}\n      </text>\n    );\n  }\n\n  if (React.isValidElement(label)) {\n    return label;\n  }\n\n  return null;\n}\n","import React from 'react';\nimport Label from '../Label';\nimport {\n  bisectorAngle,\n  extractPercentage,\n  functionProp,\n  shiftVectorAlongAngle,\n} from '../utils';\nimport type { PropsWithDefaults as ChartProps } from './Chart';\nimport type { LabelRenderProps } from '../Label';\nimport type { ExtendedData, BaseDataEntry } from '../commonTypes';\n\nfunction round(number: number): number {\n  const divisor = 1e14; // 14 decimals\n  return Math.round((number + Number.EPSILON) * divisor) / divisor;\n}\n\nfunction evaluateTextAnchorPosition({\n  labelPosition,\n  lineWidth,\n  labelHorizontalShift,\n}: {\n  labelPosition: number;\n  lineWidth: number;\n  labelHorizontalShift: number;\n}) {\n  const dx = round(labelHorizontalShift);\n  // Label in the vertical center\n  if (dx === 0) {\n    return 'middle';\n  }\n  // Outward label\n  if (labelPosition > 100) {\n    return dx > 0 ? 'start' : 'end';\n  }\n  // Inward label\n  const innerRadius = 100 - lineWidth;\n  if (labelPosition < innerRadius) {\n    return dx > 0 ? 'end' : 'start';\n  }\n  // Overlying label\n  return 'middle';\n}\n\nfunction makeLabelRenderProps<DataEntry extends BaseDataEntry>(\n  data: ExtendedData<DataEntry>,\n  props: ChartProps<DataEntry>\n): LabelRenderProps<DataEntry>[] {\n  return data.map((dataEntry, index) => {\n    const segmentsShift = functionProp(props.segmentsShift, index) ?? 0;\n    const distanceFromCenter =\n      extractPercentage(props.radius, props.labelPosition) + segmentsShift;\n    const { dx, dy } = shiftVectorAlongAngle(\n      bisectorAngle(dataEntry.startAngle, dataEntry.degrees),\n      distanceFromCenter\n    );\n\n    // This object is passed as argument to the \"label\" function prop\n    const labelRenderProps: LabelRenderProps<DataEntry> = {\n      x: props.center[0],\n      y: props.center[1],\n      dx,\n      dy,\n      textAnchor: evaluateTextAnchorPosition({\n        labelPosition: props.labelPosition,\n        lineWidth: props.lineWidth,\n        labelHorizontalShift: dx,\n      }),\n      dataEntry,\n      dataIndex: index,\n      style: functionProp(props.labelStyle, index),\n    };\n\n    return labelRenderProps;\n  });\n}\n\nexport default function renderLabels<DataEntry extends BaseDataEntry>(\n  data: ExtendedData<DataEntry>,\n  props: ChartProps<DataEntry>\n) {\n  const { label } = props;\n  if (label) {\n    return makeLabelRenderProps(data, props).map((labelRenderProps, index) => (\n      <Label\n        key={`label-${labelRenderProps.dataEntry.key || index}`}\n        renderLabel={label}\n        labelProps={labelRenderProps}\n      />\n    ));\n  }\n}\n","'use strict'\n\n// from http://stackoverflow.com/a/18473154\nconst partialCircle = (cx, cy, r, start, end) => {\n\tconst length = end - start\n\tif (length === 0) return []\n\n\tconst fromX = r * Math.cos(start) + cx\n\tconst fromY = r * Math.sin(start) + cy\n\tconst toX = r * Math.cos(end) + cx\n\tconst toY = r * Math.sin(end) + cy\n\tconst large = Math.abs(length) <= Math.PI ? '0' : '1'\n\tconst sweep = length < 0 ? '0' : '1'\n\n\treturn [\n\t\t['M', fromX, fromY],\n\t\t['A', r, r, 0, large, sweep, toX, toY]\n\t]\n}\n\nmodule.exports = partialCircle\n","import React from 'react';\nimport type { SVGProps } from 'react';\nimport partialCircle from 'svg-partial-circle';\nimport {\n  bisectorAngle,\n  degreesToRadians,\n  extractPercentage,\n  isNumber,\n  shiftVectorAlongAngle,\n  valueBetween,\n} from './utils';\n\nexport function makePathCommands(\n  cx: number,\n  cy: number,\n  startAngle: number,\n  lengthAngle: number,\n  radius: number\n): string {\n  const patchedLengthAngle = valueBetween(lengthAngle, -359.999, 359.999);\n\n  return partialCircle(\n    cx,\n    cy, // center X and Y\n    radius,\n    degreesToRadians(startAngle),\n    degreesToRadians(startAngle + patchedLengthAngle)\n  )\n    .map((command) => command.join(' '))\n    .join(' ');\n}\n\ntype Props = SVGProps<SVGPathElement> & {\n  cx: number;\n  cy: number;\n  lengthAngle: number;\n  lineWidth: number;\n  radius: number;\n  reveal?: number;\n  rounded?: boolean;\n  shift?: number;\n  startAngle: number;\n  title?: string | number;\n};\n\nexport default function ReactMinimalPieChartPath({\n  cx,\n  cy,\n  lengthAngle,\n  lineWidth,\n  radius,\n  shift = 0,\n  reveal,\n  rounded,\n  startAngle,\n  title,\n  ...props\n}: Props) {\n  const pathRadius = radius - lineWidth / 2;\n  //@NOTE This shift might be rendered as a translation in future\n  const { dx, dy } = shiftVectorAlongAngle(\n    bisectorAngle(startAngle, lengthAngle),\n    shift\n  );\n\n  const pathCommands = makePathCommands(\n    cx + dx,\n    cy + dy,\n    startAngle,\n    lengthAngle,\n    pathRadius\n  );\n  let strokeDasharray;\n  let strokeDashoffset;\n\n  // Animate/hide paths with \"stroke-dasharray\" + \"stroke-dashoffset\"\n  // https://css-tricks.com/svg-line-animation-works/\n  if (isNumber(reveal)) {\n    const pathLength = degreesToRadians(pathRadius) * lengthAngle;\n    strokeDasharray = Math.abs(pathLength);\n    strokeDashoffset =\n      strokeDasharray - extractPercentage(strokeDasharray, reveal);\n  }\n\n  return (\n    <path\n      d={pathCommands}\n      fill=\"none\"\n      strokeWidth={lineWidth}\n      strokeDasharray={strokeDasharray}\n      strokeDashoffset={strokeDashoffset}\n      strokeLinecap={rounded ? 'round' : undefined}\n      {...props}\n    >\n      {title && <title>{title}</title>}\n    </path>\n  );\n}\n","import React from 'react';\nimport type { CSSProperties, SyntheticEvent } from 'react';\nimport Path from '../Path';\nimport { extractPercentage, functionProp, isNumber } from '../utils';\nimport type { ExtendedData, BaseDataEntry } from '../commonTypes';\nimport type { PropsWithDefaults as ChartProps } from './Chart';\n\nfunction combineSegmentTransitionsStyle(\n  duration: number,\n  easing: string,\n  customStyle?: CSSProperties\n): { transition: string } {\n  // Merge chart's animation CSS transition with \"transition\" found to customStyle\n  let transition = `stroke-dashoffset ${duration}ms ${easing}`;\n  if (customStyle && customStyle.transition) {\n    transition = `${transition},${customStyle.transition}`;\n  }\n  return {\n    transition,\n  };\n}\n\nfunction getRevealValue({\n  reveal,\n  animate,\n}: Pick<ChartProps, 'reveal' | 'animate'>) {\n  //@NOTE When animation is on, chart has to be fully revealed when reveal is not set\n  if (animate && !isNumber(reveal)) {\n    return 100;\n  }\n  return reveal;\n}\n\nfunction makeEventHandler<\n  Event extends SyntheticEvent,\n  Payload,\n  EventHandler extends (event: Event, payload: Payload) => void,\n>(eventHandler: undefined | EventHandler, payload: Payload) {\n  return (\n    eventHandler &&\n    ((e: Event) => {\n      eventHandler(e, payload);\n    })\n  );\n}\n\nexport default function renderSegments<DataEntry extends BaseDataEntry>(\n  data: ExtendedData<DataEntry>,\n  props: ChartProps<DataEntry>,\n  revealOverride?: null | number\n) {\n  // @NOTE this should go in Path component. Here for performance reasons\n  const reveal = revealOverride ?? getRevealValue(props);\n  const {\n    radius,\n    center: [cx, cy],\n  } = props;\n  const lineWidth = extractPercentage(radius, props.lineWidth);\n  const paths = data.map((dataEntry, index) => {\n    const segmentsStyle = functionProp(props.segmentsStyle, index);\n    return (\n      <Path\n        cx={cx}\n        cy={cy}\n        key={dataEntry.key || index}\n        lengthAngle={dataEntry.degrees}\n        lineWidth={lineWidth}\n        radius={radius}\n        rounded={props.rounded}\n        reveal={reveal}\n        shift={functionProp(props.segmentsShift, index)}\n        startAngle={dataEntry.startAngle}\n        title={dataEntry.title}\n        style={Object.assign(\n          {},\n          segmentsStyle,\n          props.animate &&\n            combineSegmentTransitionsStyle(\n              props.animationDuration,\n              props.animationEasing,\n              segmentsStyle\n            )\n        )}\n        stroke={dataEntry.color}\n        tabIndex={props.segmentsTabIndex}\n        onBlur={makeEventHandler(props.onBlur, index)}\n        onClick={makeEventHandler(props.onClick, index)}\n        onFocus={makeEventHandler(props.onFocus, index)}\n        onKeyDown={makeEventHandler(props.onKeyDown, index)}\n        onMouseOver={makeEventHandler(props.onMouseOver, index)}\n        onMouseOut={makeEventHandler(props.onMouseOut, index)}\n      />\n    );\n  });\n\n  if (props.background) {\n    paths.unshift(\n      <Path\n        cx={cx}\n        cy={cy}\n        key=\"bg\"\n        lengthAngle={props.lengthAngle}\n        lineWidth={lineWidth}\n        radius={radius}\n        rounded={props.rounded}\n        startAngle={props.startAngle}\n        stroke={props.background}\n      />\n    );\n  }\n\n  return paths;\n}\n","import React, { useState, useEffect } from 'react';\nimport type {\n  CSSProperties,\n  FocusEvent,\n  KeyboardEvent,\n  MouseEvent,\n  ReactNode,\n} from 'react';\nimport extendData from './extendData';\nimport renderLabels from './renderLabels';\nimport renderSegments from './renderSegments';\nimport type { Data, BaseDataEntry, LabelRenderFunction } from '../commonTypes';\n\nexport type Props<DataEntry extends BaseDataEntry = BaseDataEntry> = {\n  animate?: boolean;\n  animationDuration?: number;\n  animationEasing?: string;\n  background?: string;\n  center?: [number, number];\n  children?: ReactNode;\n  className?: string;\n  data: Data<DataEntry>;\n  lengthAngle?: number;\n  lineWidth?: number;\n  label?: LabelRenderFunction<DataEntry>;\n  labelPosition?: number;\n  labelStyle?:\n    | CSSProperties\n    | ((dataIndex: number) => CSSProperties | undefined);\n  onBlur?: (event: FocusEvent, dataIndex: number) => void;\n  onClick?: (event: MouseEvent, dataIndex: number) => void;\n  onFocus?: (event: FocusEvent, dataIndex: number) => void;\n  onKeyDown?: (event: KeyboardEvent, dataIndex: number) => void;\n  onMouseOut?: (event: MouseEvent, dataIndex: number) => void;\n  onMouseOver?: (event: MouseEvent, dataIndex: number) => void;\n  paddingAngle?: number;\n  radius?: number;\n  reveal?: number;\n  rounded?: boolean;\n  segmentsShift?: number | ((dataIndex: number) => number | undefined);\n  segmentsStyle?:\n    | CSSProperties\n    | ((dataIndex: number) => CSSProperties | undefined);\n  segmentsTabIndex?: number;\n  startAngle?: number;\n  style?: CSSProperties;\n  totalValue?: number;\n  viewBoxSize?: [number, number];\n};\n\nexport const defaultProps = {\n  animationDuration: 500,\n  animationEasing: 'ease-out',\n  center: [50, 50] as [number, number],\n  data: [] as Data,\n  labelPosition: 50,\n  lengthAngle: 360,\n  lineWidth: 100,\n  paddingAngle: 0,\n  radius: 50,\n  startAngle: 0,\n  viewBoxSize: [100, 100] as [number, number],\n};\n\nexport type PropsWithDefaults<DataEntry extends BaseDataEntry = BaseDataEntry> =\n  Props<DataEntry> & typeof defaultProps;\n\nfunction makePropsWithDefaults<DataEntry extends BaseDataEntry>(\n  props: Props<DataEntry>\n): PropsWithDefaults<DataEntry> {\n  const result: PropsWithDefaults<DataEntry> = Object.assign(\n    {},\n    defaultProps,\n    props\n  );\n\n  // @NOTE Object.assign doesn't default properties with undefined value (like React defaultProps does)\n  let key: keyof typeof defaultProps;\n  for (key in defaultProps) {\n    if (props[key] === undefined) {\n      // @ts-expect-error: TS cannot ensure we're assigning the expected props accross abjects\n      result[key] = defaultProps[key];\n    }\n  }\n\n  return result;\n}\n\nexport function ReactMinimalPieChart<DataEntry extends BaseDataEntry>(\n  originalProps: Props<DataEntry>\n) {\n  const props = makePropsWithDefaults(originalProps);\n  const [revealOverride, setRevealOverride] = useState(\n    props.animate ? 0 : null\n  );\n\n  useEffect(() => {\n    if (props.animate) {\n      // Trigger initial animation\n      setRevealOverride(null);\n    }\n  }, []);\n\n  const extendedData = extendData(props);\n  return (\n    <svg\n      viewBox={`0 0 ${props.viewBoxSize[0]} ${props.viewBoxSize[1]}`}\n      width=\"100%\"\n      height=\"100%\"\n      className={props.className}\n      style={props.style}\n    >\n      {renderSegments(extendedData, props, revealOverride)}\n      {renderLabels(extendedData, props)}\n      {props.children}\n    </svg>\n  );\n}\n"],"names":["degreesToRadians","degrees","Math","PI","valueBetween","value","min","max","extractPercentage","percentage","bisectorAngle","startAngle","lengthAngle","shiftVectorAlongAngle","angle","distance","angleRadians","dx","cos","dy","sin","isNumber","functionProp","prop","payload","sumValues","data","sum","i","length","extendData","_ref","totalAngle","totalValue","paddingAngle","chartStartAngle","total","normalizedTotalAngle","numberOfPaddings","abs","singlePaddingDegrees","sign","degreesTakenByPadding","degreesTakenByPaths","lastSegmentEnd","extendedData","dataEntry","valueInPercentage","push","Object","assign","ReactMinimalPieChartLabel","renderLabel","labelProps","label","dataIndex","props","_objectWithoutPropertiesLoose","_excluded","React","createElement","dominantBaseline","isValidElement","round","number","divisor","Number","EPSILON","evaluateTextAnchorPosition","labelPosition","lineWidth","labelHorizontalShift","innerRadius","makeLabelRenderProps","map","index","_functionProp","segmentsShift","distanceFromCenter","radius","_shiftVectorAlongAngl","labelRenderProps","x","center","y","textAnchor","style","labelStyle","renderLabels","Label","key","partialCircle","cx","cy","r","start","end","fromX","fromY","toX","toY","large","sweep","module","makePathCommands","patchedLengthAngle","command","join","ReactMinimalPieChartPath","_ref$shift","shift","reveal","rounded","title","pathRadius","pathCommands","strokeDasharray","strokeDashoffset","pathLength","d","fill","strokeWidth","strokeLinecap","undefined","combineSegmentTransitionsStyle","duration","easing","customStyle","transition","getRevealValue","animate","makeEventHandler","eventHandler","e","renderSegments","revealOverride","_props$center","paths","segmentsStyle","Path","animationDuration","animationEasing","stroke","color","tabIndex","segmentsTabIndex","onBlur","onClick","onFocus","onKeyDown","onMouseOver","onMouseOut","background","unshift","defaultProps","viewBoxSize","makePropsWithDefaults","result","ReactMinimalPieChart","originalProps","_useState","useState","setRevealOverride","useEffect","viewBox","width","height","className","children"],"mappings":"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","x_google_ignoreList":[4]}